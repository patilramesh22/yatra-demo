{"name": "test_search_flights_1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: MicrosoftEdge=107.0.1418.26)\nStacktrace:\nBacktrace:\n\tMicrosoft::Applications::Events::EventProperties::SetProperty [0x00007FF6A28C8552+9986]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF6A2865D82+1445234]\n\tOrdinal0 [0x00007FF6A244FC8C+654476]\n\tOrdinal0 [0x00007FF6A2453A18+670232]\n\tOrdinal0 [0x00007FF6A2453728+669480]\n\tOrdinal0 [0x00007FF6A2453B80+670592]\n\tOrdinal0 [0x00007FF6A2499182+954754]\n\tOrdinal0 [0x00007FF6A2496A7C+944764]\n\tOrdinal0 [0x00007FF6A2495144+938308]\n\tOrdinal0 [0x00007FF6A248689D+878749]\n\tOrdinal0 [0x00007FF6A24B3B9A+1063834]\n\tOrdinal0 [0x00007FF6A2485FF4+876532]\n\tOrdinal0 [0x00007FF6A2485EAF+876207]\n\tOrdinal0 [0x00007FF6A24B3E90+1064592]\n\tOrdinal0 [0x00007FF6A2485FF4+876532]\n\tOrdinal0 [0x00007FF6A24CCF70+1167216]\n\tOrdinal0 [0x00007FF6A24B39B3+1063347]\n\tOrdinal0 [0x00007FF6A248506A+872554]\n\tOrdinal0 [0x00007FF6A248402E+868398]\n\tOrdinal0 [0x00007FF6A248570F+874255]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF6A2726108+135416]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF6A27102CF+45759]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF6A271374C+59196]\n\tOrdinal0 [0x00007FF6A255B1F4+1749492]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF6A286B67A+1468010]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF6A286FF14+1486596]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF6A287006D+1486941]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF6A2877E2B+1519131]\n\tBaseThreadInitThunk [0x00007FFDDF647034+20]\n\tRtlUserThreadStart [0x00007FFDDFDE2651+33]", "trace": "self = <test_scripts.test_search_flights.TestSearchAndVerify testMethod=test_search_flights_1>, goingfrom = 'Mum', goingto = 'Bangalore', date = datetime.datetime(2024, 1, 10, 0, 0), stop = '1 Stop'\n\n    @data(*Utils.read_data_from_excel(\"data/input.xlsx\",\"yatra_lp\"))\n    @unpack\n    def test_search_flights(self, goingfrom, goingto, date, stop):\n>       search_flights_result = self.lp.search_flights(goingfrom, goingto, date)\n\ntest_scripts\\test_search_flights.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\yatra_launch_page.py:77: in search_flights\n    self.enterGoingToLocation(going_to_location)\npages\\yatra_launch_page.py:55: in enterGoingToLocation\n    result.click()\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:88: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:396: in _execute\n    return self._parent.execute(command, params)\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002AE319FBED0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is n...77E2B+1519131]\\\\n\\\\tBaseThreadInitThunk [0x00007FFDDF647034+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFDDFDE2651+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: MicrosoftEdge=107.0.1418.26)\nE       Stacktrace:\nE       Backtrace:\nE       \tMicrosoft::Applications::Events::EventProperties::SetProperty [0x00007FF6A28C8552+9986]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF6A2865D82+1445234]\nE       \tOrdinal0 [0x00007FF6A244FC8C+654476]\nE       \tOrdinal0 [0x00007FF6A2453A18+670232]\nE       \tOrdinal0 [0x00007FF6A2453728+669480]\nE       \tOrdinal0 [0x00007FF6A2453B80+670592]\nE       \tOrdinal0 [0x00007FF6A2499182+954754]\nE       \tOrdinal0 [0x00007FF6A2496A7C+944764]\nE       \tOrdinal0 [0x00007FF6A2495144+938308]\nE       \tOrdinal0 [0x00007FF6A248689D+878749]\nE       \tOrdinal0 [0x00007FF6A24B3B9A+1063834]\nE       \tOrdinal0 [0x00007FF6A2485FF4+876532]\nE       \tOrdinal0 [0x00007FF6A2485EAF+876207]\nE       \tOrdinal0 [0x00007FF6A24B3E90+1064592]\nE       \tOrdinal0 [0x00007FF6A2485FF4+876532]\nE       \tOrdinal0 [0x00007FF6A24CCF70+1167216]\nE       \tOrdinal0 [0x00007FF6A24B39B3+1063347]\nE       \tOrdinal0 [0x00007FF6A248506A+872554]\nE       \tOrdinal0 [0x00007FF6A248402E+868398]\nE       \tOrdinal0 [0x00007FF6A248570F+874255]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF6A2726108+135416]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF6A27102CF+45759]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF6A271374C+59196]\nE       \tOrdinal0 [0x00007FF6A255B1F4+1749492]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF6A286B67A+1468010]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF6A286FF14+1486596]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF6A287006D+1486941]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF6A2877E2B+1519131]\nE       \tBaseThreadInitThunk [0x00007FFDDF647034+20]\nE       \tRtlUserThreadStart [0x00007FFDDFDE2651+33]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:243: StaleElementReferenceException"}, "attachments": [{"name": "log", "source": "44f9d522-cd65-4b72-8ae8-01108ea1807f-attachment.txt", "type": "text/plain"}], "start": 1703869005215, "stop": 1703869006894, "uuid": "5711bcac-7838-47c7-8575-ec986a75f1c0", "historyId": "034c240dfe2e83ac0428520413f940fc", "testCaseId": "034c240dfe2e83ac0428520413f940fc", "fullName": "test_scripts.test_search_flights.TestSearchAndVerify#test_search_flights_1", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "parentSuite", "value": "test_scripts"}, {"name": "suite", "value": "test_search_flights"}, {"name": "subSuite", "value": "TestSearchAndVerify"}, {"name": "host", "value": "VG"}, {"name": "thread", "value": "42624-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_scripts.test_search_flights"}]}